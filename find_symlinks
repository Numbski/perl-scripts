#!/usr/bin/env perl

use File::Find;

my $path = shift or ( print( 'Usage: find_symlinks (path)
Example: find_symlinks /var
') && exit);

if(!-d $path){
	print "Please pass a directory.\n";
}


print "Beginning search on $path.
Depending upon how many files you have, this might take a while.  Please
be patient.\n\n";
find(
	{
	'wanted' => \&find_links,
	'no_chdir' => 1
	}, $path
);

my %files;
my @symlink_files;
my @symlink_dirs;
my $hardlink_files;
my $hardlink_dirs;


sub find_links{
	if(-l $_){
		push(@symlink_files,$_) if (-f $_);
		push(@symlink_dirs,$_) if (-d $_);
	}
	else{
		my ($dev,$ino) = stat($_);
		if(-f $_){
			push(@{ $hardlink_files{"$dev $ino"} },$_);
		}
		if(-d $_){
			push(@{ $hardlink_dirs{"$dev $ino"} },$_);
		}
	}
}

print "--------------------------------------\n";
print "Files with multiple hardlinks:\n";
print "--------------------------------------\n\n";

foreach my $key(sort keys %$hardlink_files){
	if( scalar(@{ $hardlink_files->{$key} }) ){
		print "$key:";
		foreach my $file(sort @{ $hardlink_files->{$key} }){
			print "\t$file\n";
		}
		print "\n";
	}
}

print "--------------------------------------\n";
print "Directories with multiple hardlinks:\n";
print "--------------------------------------\n\n";

foreach my $key(sort keys %$hardlink_dirs){
	if( scalar(@{ $hardlink_dirs->{$key} }) ){
		print "$key:";
		foreach my $dir(sort @{ $hardlink_dirs->{$key} }){
			print "\t$dir\n";
		}
		print "\n";
	}
}

print "--------------------------------------\n";
print "Files that are actually symlinks:\n";
print "--------------------------------------\n\n";

foreach my $file(sort @symlink_files){
	print "$file -> ".readlink($file)."\n";
}
print "\n";

print "--------------------------------------\n";
print "Directories that are actually symlinks:\n";
print "--------------------------------------\n\n";

foreach my $dir(sort @symlink_dirs){
	print "$dir -> ".readlink($dir)."\n";
}
